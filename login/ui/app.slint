import { VerticalBox , HorizontalBox, Button, StandardButton, Palette } from "std-widgets.slint";
import { Button, VerticalBox, LineEdit, CheckBox, Spinner } from "std-widgets.slint";
import { BorderlessWindow } from "borderless-window.slint";
import { Images } from "../../ui/images.slint";
import { Header, HeaderAdapter } from "./blocks/blocks.slint";


export { Header, HeaderAdapter }
export global Display {
    // 导出全局单例：Rust代码可以操作
    callback xview_display();
}  

export component MyLoginWindow inherits BorderlessWindow {

    title: "☁️";
    icon: Images.logo;
    preferred-width: 565px;
    preferred-height: 410px;
    
    Image {
        preferred-width: root.width;
        preferred-height: root.height;
        source: Images.login;
    }
    
    show_confirm_popup => { confirm_popup.show(); }

    confirm_popup := PopupWindow {
        x: 40px;
        y: 100px;
        width: min(confirm_popup_layout.preferred-width, root.width - 80px);

        Rectangle {
            background: Palette.background;
            border-color: Palette.border;
            border-width: 1px;
        }

        confirm_popup_layout := Dialog {
            height:100%; width: 100%;

            confirm_popup_text := Text {
                text: "【 用户名/密码 】错误，请重新输入！";
                wrap: word-wrap;
            }

            //StandardButton { kind: yes; clicked => { root.popup_confirmed(); } }
            StandardButton { kind: yes; }
        }
    }

    in-out property <string> lun;
    in-out property <string> lpw;
    in-out property <int> ldays;

    callback close-window();
    callback hidden-window();
    callback login_check(string, string) -> bool;
    callback minimized-window(bool);
    callback maximized-window(bool);
    callback move-window(length, length);
    callback mouse-down(int, int);
    callback mouse-move(int, int);
    callback display-license(int);
    callback show_confirm_popup;
    callback popup_confirmed();

    on-close-window() => {
        close-window();
    }

 
    on-minimized-window(enable) => {
        minimized-window(enable);
    }

    on-maximized-window(enable) => {
        maximized-window(enable);
    }

    on-move-window(offset-x, offset-y) => {
        move-window(offset-x, offset-y);
    }
    

    GridLayout {
        //x: 400px;
        padding: 50px;
        spacing: 25px;
        
        Row {
           Text {
                text: "欢迎登录云桌面";
                font-size: 24px;
                color: white;
                horizontal-alignment: center;
                font-weight: 1000;                
           }
        }
        Row {


	    Header {}
	    
        /*
            lic := Text {
                 //text: "许可证剩余：【 "+ldays+" 】天";
                 font-size: 12px;
                 color: white;
                 horizontal-alignment: center;
                 font-weight: 800;                
            }

            */
	   
         }
        Row {
            un := LineEdit { // Username
                horizontal-alignment: left;
                font-size: 16px;
                placeholder-text: "用户名";
                text <=> root.lun;
                height: 35px;
                //colspan: 2;
            }
        
        }
        Row {
            pw := LineEdit { // Password
                horizontal-alignment: left;
                font-size: 16px;
                placeholder-text: "密码";
                input-type: password;
                text <=> root.lpw;
                height: 35px;
                accepted(text) => {
                    if root.login_check(un.text, pw.text) {
                        root.hidden-window();
                        Display.xview_display();
                        close-window();
                    } else {
                        root.show_confirm_popup();
                    }
                }
            }
        }
        
        CheckBox {
            height: 35px;
            horizontal-stretch: 1;
            text: "保存密码?";

        }  

        Row{
            Button {
                text: "登录";
                primary: true;
                height: 35px;
                clicked => {
                    //root.display-license(ldays);
                    // test
                    if root.login_check(un.text, pw.text) {
                        root.hidden-window();
                        Display.xview_display();
                        close-window();
                    } else {
                        root.show_confirm_popup();
                    }
                }
                enabled: pw.text != "";
            }

            // test
            //Button {
            //    clicked => { root.show_confirm_popup(); }
            //
            //    text: "显示对话框";
            //}
        }
    }
}
